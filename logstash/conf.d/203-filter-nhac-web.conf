filter {  
  ### nhac web
  if [type] == "nhaclog" {
    grok {
      match           => [ "message", "%{HOSTNAME:hostname} %{IP:client_ip} - - \[%{HTTPDATE:time_log}\] \"%{WORD:method} %{URIPATH:url}(:?|%{URIPARAM:param})(?: HTTP/%{NUMBER:httpversion:int})\" %{NUMBER:response:int} %{NUMBER:bytes:float} \"(?:-|%{GREEDYDATA:referer})\" \"%{GREEDYDATA:user_agent}\" \"(?:-|%{IP:http_x_forwarded_for})\" \"%{NUMBER:request_time:float}\" \"%{NUMBER:connection_requests:int}\"" ]
    }
    if "_grokparsefailure" in [tags] {
      drop { }
    }
    geoip{
      source => "client_ip"
      database       => "/etc/logstash/GeoLiteCity.dat"
    }
    date {
      match           => [ "time_log", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target          => "time_write_log"
      remove_field    => "time_log"
    }
    useragent {
      source         => "user_agent"
    }
  }
  mutate {
    remove_field => ["[geoip][city_name]", "[geoip][continent_code]", "[geoip][country_code3]", "[geoip][timezone]", "host", "tags", "beat", "input_type", "@version", "offset"]
  }
  date {
    match            => [ "timestamp", "dd-MMM-yyyy HH:mm:ss Z" ]
  }
}
